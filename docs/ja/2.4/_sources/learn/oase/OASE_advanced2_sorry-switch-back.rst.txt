=====================================
不要になったイベントについて
=====================================

状況の整理
===========

| :doc:`OASE_advanced_sorry-switch-back` で、後続のイベントが発生するまでTTLを十分な長さにする必要性に触れました。
| ここでは、TTLを長く設定したイベントが不要になった場合を考えてみましょう。

| 例えば今回のシナリオでは、必要に応じてOASEを介さず、手動で問題に対処しSorry画面からの切り戻しが行われる場合、Sorry画面表示の結論イベントは不要となります。
| この場合、実際は不要となっていても、OASE上ではTTLが経過するまで、そのイベントはルールの評価対象として残ってしまいます。
| ルールの設定によっては、後続のイベントが発生したときに、この不要となったイベントも評価対象とされ、実際の状況に合わない形でアクションが実施されてしまう危険も出てきます。

| では、不要となったイベントを評価対象から外すにはどうすればよいのか、考えてみましょう。
| 結論から述べると、よりTTLが短いイベントに置き換えることで、不要なイベントをTTL切れにすることが可能です。

| よりTTLが短いイベントに置き換えるには、元のイベントを検知するフィルターを条件にしTTLを最小値に設定した新たなルールを設定することで実現可能です。

ルールの設定
==============

| では、:doc:`OASE_answer_sorry-switch-back` のシナリオをもとに、TTLが短いイベントに置き換えるルールを作成してみましょう。
| 今回のシナリオでは、Sorry画面表示の結論イベントが不要となったという想定のもとで設定をします。

ルールの設定
-------------

| Sorry画面表示の結論イベントを検知するフィルターは、「sorry_switch」です。
| このフィルターを条件として、TTLを最小値に設定したルールを作成しましょう。

.. warning::
   | :doc:`OASE_advanced_sorry-switch-back` では、TTL切れを防ぐ方法として以下の二つの方法を提示しました。

      A. TTLをできるだけ長くする

      B. TTLが過ぎたら、改めて、同じラベルが付与された結論イベントを発生させる

   | Bでは、Sorry画面表示の結論イベントを発生させ続けるための「sorry表示中」というルールを新たに設定しましたが、そのイベントを発生させ続ける必要はなくなりました。
   | まずは、イベントの発生を止めましょう。
   | イベントの発生は、ルールを「false」にするか、ルール自体を廃止することで止められます。

   | ただルールの設定には、他のルール（「false」と設定したものを含む）とまったく同じ条件でルールを作成することはできないという仕様があります。
   | これから作成するルールと、「sorry表示中」というルールの条件が被ってしまいますので、今回は「sorry表示中」というルールを廃止しましょう。
   | ルールの廃止は、:menuselection:`OASE --> ルール --> ルール` から以下のように設定します。

.. figure::/src/images/learn/quickstart/oase/OASE_advanced2_sorry-switch-back/OASE_advanced2_sorry-switch-back_ルール廃止.gif
   :width: 1200px
   :alt: ルール廃止

| また、今回作成するルールで対象となるイベントにすぐに適用されるように、優先順位「1」だった「Sorry画面切り戻し」のルールは、「false」に設定しましょう。

| 今回は、以下のような設定でルールを作成します。

.. list-table:: ルールの設定値
   :widths: 10 10 10 10 10 10 10 10 10 10
   :header-rows: 3

   * - 有効
     - ルール名
     - ルールラベル名
     - 優先順位
     - 条件
     - アクション
     - 結論イベント
     - 
     - 
     - 
   * - 
     - 
     - 
     - フィルターA
     - アクションID
     - 
     - 元イベントのラベル継承
     - 
     - 結論ラベル設定
     - TTL 
   * - 
     - 
     - 
     -
     -
     - 
     - 
     - アクション
     - イベント
     - 
   * - :kbd:`True`
     - :kbd:`kill_event`
     - :kbd:`kill_event`
     - :kbd:`1`
     - :kbd:`sorry_switch`
     - 
     - :kbd:`True`
     - :kbd:`False`
     - :kbd:`["event_status", "==", "termination"]`
     - :kbd:`10`

.. tip::
   | ルール名やルールラベル名は任意で設定可能です。わかりやすいものを設定しましょう。
   | 必要な結論イベントを発生させるためのルールなので、選択するアクションはありません。
   | 結論ラベルは、イベントが判別しやすいものを設定しましょう。

結果の確認
-----------
| ではルールの設定から結論イベントが発生するまでを、:menuselection:`イベントフロー` 画面から確認してみましょう。

| :menuselection:`OASE --> イベント --> イベントフロー` の画面では、時系列に沿ってイベントが発生している様子が確認できます。
| TTLが短い結論イベントに:menuselection:`ルール` で設定したラベルが付与されていることも確認しましょう。

.. figure::/src/images/learn/quickstart/oase/OASE_advanced2_sorry-switch-back/OASE_advanced2_sorry-switch-back_結果確認.gif
   :width: 1200px
   :alt: イベントフロー_結論イベント

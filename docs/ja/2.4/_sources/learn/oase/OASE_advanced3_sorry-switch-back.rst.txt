=====================================
不要になったイベントについて2
=====================================

状況の整理
===========

| :doc:`OASE_advanced2_sorry-switch-back` では、既存のフィルターを用いた解決策を提案しました。
| ただ既存のフィルターを用いた場合、そのフィルターを用いる既存のルールの設定を一時的に変更する必要がありました。
| ここでは、不要となるイベントに対応するフィルターを用いた対応を考えてみましょう。

| 例えば今回のシナリオでは、後続のイベントの発生を待っているイベントには、["event_status", "progress"]というラベルを付与する設定をしました。
| 事前にこの設定がわかっているようであれば、["event_status", "progress"]のラベルを検知するフィルターを事前に作成しておくことで、対応することが可能となります。

| また、不要になったイベントが複数ある場合にもこちらのフィルターを用いた一つのルールだけで対応が可能です。
| 例えば今回のシナリオでは、Sorry画面の切り戻しのとき、先行する結論イベントを参照しましたが、スケールインするときも先行するスケールアウトの結論イベントを参照する形で設定するとしましょう。
| その場合、OASEを介さず、手動でスケールインまで対応したら、Sorry画面切り替えだけでなく、スケールアウトのイベントも不要になります。
| こうした場合に、複数のイベントをTTL切れにするのに役立ちます。

ルールの設定
==============

| では、実際にフィルターとルールの設定を行っていきましょう。

フィルターの設定
------------------

| :menuselection:`OASE --> ルール --> フィルター` から、:menuselection:`フィルター` を設定します。

| :menuselection:`登録` ボタンを押し、以下のラベル付与の設定を追加していきます。

.. figure::/src/images/learn/quickstart/oase/OASE_advanced3_sorry-switch-back/OASE_advanced3_sorry_switch-back_フィルター設定詳細画面.png
   :width: 1200px
   :alt: フィルター

.. list-table:: フィルターの設定値
   :widths: 10 10 10 10
   :header-rows: 1

   * - 有効
     - フィルター名
     - フィルター条件
     - 検索方法
   * - :kbd:`True`
     - :kbd:`kill_event`
     - :kbd:`["event_status", "progress"]`
     - :kbd:`キューイング`

| 入力が終わったら、:menuselection:`編集確認` ボタンを押して登録します。

.. tip::
   | フィルター名は任意で設定可能です。わかりやすいものを設定しましょう。
   | 検索方法を「キューイング」とすることで、複数の不要なイベントに対応可能となります。

ルールの設定
-------------

| フィルター「kill_event」を条件として、TTLを最小値に設定したルールを作成しましょう。

| 今回は、以下のような設定でルールを作成します。

.. list-table:: ルールの設定値
   :widths: 10 10 10 10 10 10 10 10 10 10
   :header-rows: 3

   * - 有効
     - ルール名
     - ルールラベル名
     - 優先順位
     - 条件
     - アクション
     - 結論イベント
     - 
     - 
     - 
   * - 
     - 
     - 
     - フィルターA
     - アクションID
     - 
     - 元イベントのラベル継承
     - 
     - 結論ラベル設定
     - TTL 
   * - 
     - 
     - 
     -
     -
     - 
     - 
     - アクション
     - イベント
     - 
   * - :kbd:`True`
     - :kbd:`kill_event`
     - :kbd:`kill_event`
     - :kbd:`1`
     - :kbd:`kill_event`
     - 
     - :kbd:`True`
     - :kbd:`False`
     - :kbd:`["event_status", "==", "termination"]`
     - :kbd:`10`

.. tip::
   | ルール名やルールラベル名は任意で設定可能です。わかりやすいものを設定しましょう。
   | 必要な結論イベントを発生させるためのルールなので、選択するアクションはありません。
   | 結論ラベルは、イベントが判別しやすいものを設定しましょう。

結果の確認
-----------
| ではルールの設定から結論イベントが発生するまでを、:menuselection:`イベントフロー` 画面から確認してみましょう。

| :menuselection:`OASE --> イベント --> イベントフロー` の画面では、時系列に沿ってイベントが発生している様子が確認できます。
| TTLが短い結論イベントに:menuselection:`ルール` で設定したラベルが付与されていることも確認しましょう。
| 古いものから順に、["event_status", "progress"]が付与されたイベントが、["event_status", "==", "termination"]が付与されたイベントに置き換わっていくのを確認しましょう。

.. figure::/src/images/learn/quickstart/oase/OASE_advanced3_sorry-switch-back/OASE_advanced3_sorry-switch-back_結果確認.gif
   :width: 1200px
   :alt: イベントフロー_結論イベント
